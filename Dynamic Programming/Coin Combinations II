Consider a money system consisting of n coins. Each coin has a positive integer value. Your task is to calculate the number of distinct ordered ways you can produce a money sum x using the available coins.
For example, if the coins are \{2,3,5\} and the desired sum is 9, there are 3 ways: 2+2+5,3+3+3,2+2+2+3


#include <bits/stdc++.h>
using namespace std;
const int mod = 1e9+7;
 
int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
 
    int n, sum;
    cin >> n >> sum;
    vector<int> arr(n);
    for (int i = 0; i < n; i++) cin >> arr[i];
 
    sort(arr.begin(), arr.end());
    vector<int> dp(sum+1, 0);
    dp[0] = 1; 
    for (int c : arr) {
        for(int i=0;i<sum;i++){
            if(dp[i]==0)continue;
            if(i+c<=sum){
               dp[i+c]=(dp[i+c]+ dp[i])%mod;
            }
        }
    }
 
    cout << dp[sum] << "\n";
    return 0;
}
