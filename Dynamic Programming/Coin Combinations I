Consider a money system consisting of n coins. Each coin has a positive integer value. Your task is to calculate the number of distinct ways you can produce a money sum x using the available coins.
For example, if the coins are {2,3,5} and the desired sum is 9, there are 8 ways:2+2+5,2+5+2,5+2+2,3+3+3,2+2+2+3,2+2+3+2,2+3+2+2,3+2+2+2

#include <bits/stdc++.h>
using namespace std;
const int MOD = 1e9+7;
 
vector<int> dp(1e6+5, 0);
 
int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
 
    int n, sum;
    cin >> n >> sum;
    vector<int> arr(n);
    for (int i = 0; i < n; i++) cin >> arr[i];
 
    sort(arr.begin(), arr.end());
    dp[0] = 1;
 
    for (int i = 0; i < sum; i++) {
        if (dp[i] == 0) continue;  
        for (int c : arr) {
            if (i + c > sum) break;
            dp[i + c] += dp[i];
            if (dp[i + c] >= MOD) dp[i + c] -= MOD;
        }
    }
 
    cout << dp[sum] << "\n";
    return 0;
}
